version: '3.8'

services:
  simple-api:
    image: simple-api:latest
    container_name: rrr-simple-api
    ports:
      - "7000:8000"
    volumes:
      - ./rrr_model_merged:/app/model
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - MODEL_PATH=/app/model

  # Add this service if you want to run a Ray cluster head node
  # ray-head:
  #   image: rayproject/ray:latest-gpu
  #   container_name: ray-head
  #   ports:
  #     - "8265:8265"  # Ray dashboard
  #     - "10001:10001"  # Ray client server
  #     - "6379:6379"  # Redis
  #   command: >
  #     ray start --head
  #     --dashboard-host=0.0.0.0
  #     --dashboard-port=8265
  #     --port=6379
  #     --block
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]

  # Prometheus for monitoring (optional)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #   restart: unless-stopped

  # Grafana for visualization (optional)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   restart: unless-stopped

# volumes:
#   grafana_data: 